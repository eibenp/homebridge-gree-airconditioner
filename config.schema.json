{
  "pluginAlias": "GREEAirConditioner",
  "pluginType": "platform",
  "singular": true,
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "required": true,
        "default": "GREE Air Conditioner"
      },
      "port": {
        "type": "integer",
        "required": false,
        "minimum": 1025
      },
      "scanAddress": {
        "type": "string",
        "required": true,
        "default": "192.168.1.255",
        "format": "ipv4"
      },
      "scanCount": {
        "type": "integer",
        "required": true,
        "default": 10,
        "minimum": 3
      },
      "scanTimeout": {
        "type": "integer",
        "required": true,
        "default": 3,
        "minimum": 1
      },
      "devices": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "mac": {
              "type": "string",
              "required": true,
              "pattern": "^[a-f0-9]{12}$"
            },
            "name": {
              "type": "string",
              "required": false
            },
            "model": {
              "type": "string",
              "required": false
            },
            "speedSteps": {
              "type": "integer",
              "required": true,
              "default": 5,
              "oneOf": [
                {
                  "title": "3-step model",
                  "enum": [
                    3
                  ]
                },
                {
                  "title": "5-step model",
                  "enum": [
                    5
                  ]
                }
              ]
            },
            "statusUpdateInterval": {
              "type": "integer",
              "required": false,
              "minimum": 1,
              "default": 10
            },
            "sensorOffset": {
              "type": "integer",
              "required": false,
              "default": 40
            },
            "minimumTargetTemperature": {
              "type": "integer",
              "required": false,
              "minimum": 16,
              "default": 16
            },
            "maximumTargetTemperature": {
              "type": "integer",
              "required": false,
              "maximum": 30,
              "default": 30
            },
            "xFanEnabled": {
              "type": "boolean",
              "default": false
            },
            "temperatureSensor": {
              "type": "string",
              "required": true,
              "default": "disabled",
              "oneOf": [
                {
                  "title": "Disabled",
                  "enum": [
                    "disabled"
                  ]
                },
                {
                  "title": "Child accessory",
                  "enum": [
                    "child"
                  ]
                },
                {
                  "title": "Separate accessory",
                  "enum": [
                    "separate"
                  ]
                }
              ]
            },
            "disabled": {
              "type": "boolean"
            },
            "overrideDefaultVerticalSwing": {
              "type": "integer",
              "required": true,
              "default": 0,
              "oneOf": [
                {
                  "title": "Never",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "After power on",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "After power on and swing disable",
                  "enum": [
                    2
                  ]
                }
              ]
            },
            "defaultVerticalSwing": {
              "type": "integer",
              "required": true,
              "default": 0,
              "oneOf": [
                {
                  "title": "Device default",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "fixed Highest",
                  "enum": [
                    2
                  ]
                },
                {
                  "title": "fixed Higher",
                  "enum": [
                    3
                  ]
                },
                {
                  "title": "fixed Middle",
                  "enum": [
                    4
                  ]
                },
                {
                  "title": "fixed Lower",
                  "enum": [
                    5
                  ]
                },
                {
                  "title": "fixed Lowest",
                  "enum": [
                    6
                  ]
                }
              ]
            },
            "encryptionVersion" : {
              "type": "integer",
              "required": true,
              "default": 0,
              "oneOf": [
                {
                  "title": "Auto",
                  "enum": [
                    0
                  ]
                },
                {
                  "title": "v1",
                  "enum": [
                    1
                  ]
                },
                {
                  "title": "v2",
                  "enum": [
                    2
                  ]
                }
              ]
            }
          }
        }
      }
    }
  },
  "layout": [
    {
      "key": "name",
      "title": "Name:"
    },
    {
      "type": "flex",
      "flex-flow": "row wrap",
      "items": [
        {
          "key": "scanAddress",
          "flex": "1 1 50%",
          "title": "Scan address:",
          "description": "Local network broadcast address"
        },
        {
          "key": "port",
          "flex": "1 1 50%",
          "title": "Port:"
        },
        {
          "key": "scanCount",
          "flex": "1 1 50%",
          "title": "Scan count:",
          "description": "Initial device discovery retry count"
        },
        {
          "key": "scanTimeout",
          "flex": "1 1 50%",
          "title": "Scan timeout:",
          "description": "Timeout in seconds between device discovery retries"
        }
      ]
    },
    {
      "type": "array",
      "key": "devices",
      "title": "Devices",
      "buttonText": "Add device",
      "expandable": true,
      "expanded": false,
      "items": [
        {
          "type": "div",
          "displayFlex": true,
          "flex-flow": "row wrap",
          "items": [
            {
              "key": "devices[].mac",
              "flex": "1 1 50%",
              "title": "MAC address (Serial Number):",
              "description": "MAC address of the device using lowercase letters and no separators"
            },
            {
              "key": "devices[].name",
              "flex": "1 1 50%",
              "title": "Device name:",
              "description": "Custom name of the device"
            },
            {
              "key": "devices[].disabled",
              "flex": "1 1 100%",
              "title": "Disabled",
              "description": "If checked, this accessory will be removed and ignored from HomeKit.",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac));"
              }
            },
            {
              "key": "devices[].model",
              "flex": "1 1 50%",
              "title": "Device model:",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].speedSteps",
              "flex": "1 1 50%",
              "title": "Fan speed steps:",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].statusUpdateInterval",
              "flex": "1 1 50%",
              "title": "Status update interval:",
              "description": "Update interval (in seconds)",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].encryptionVersion",
              "flex": "1 1 50%",
              "title": "Network protocol encryption version:",
              "description": "Leave this on Auto. If Auto doesn't work then set to the desired version.",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].minimumTargetTemperature",
              "flex": "1 1 50%",
              "title": "Minimum target temperature:",
              "description": "Minimum target temperature (in â„ƒ)",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].maximumTargetTemperature",
              "flex": "1 1 50%",
              "title": "Maximum target temperature:",
              "description": "Maximum target temperature (in â„ƒ)",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].sensorOffset",
              "flex": "1 1 50%",
              "title": "Temperature offset:",
              "description": "Temperature sensor calibration (in â„ƒ)",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].xFanEnabled",
              "flex": "1 1 50%",
              "title": "xFan enabled",
              "description": "If enabled, then xFan functionality is turned on automatically on the device",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].temperatureSensor",
              "flex": "1 1 50%",
              "title": "Temperature sensor:",
              "description": "Additional temperature sensor in Home App",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "flex": "1 1 50%",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].overrideDefaultVerticalSwing",
              "flex": "1 1 50%",
              "title": "Override default vertical position:",
              "description": "When to override vertical swing position",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true);"
              }
            },
            {
              "key": "devices[].defaultVerticalSwing",
              "flex": "1 1 50%",
              "title": "Vertical position:",
              "description": "Default vertical swing position to be used istead of what device considers a default",
              "condition": {
                "functionBody": "return (model.devices && model.devices[arrayIndices] && model.devices[arrayIndices].mac && /^[a-f0-9]{12}$/.test(model.devices[arrayIndices].mac) && model.devices[arrayIndices].disabled !== true && model.devices[arrayIndices].overrideDefaultVerticalSwing !== 0);"
              }
            }
          ]
        }
      ]
    }
  ]
}